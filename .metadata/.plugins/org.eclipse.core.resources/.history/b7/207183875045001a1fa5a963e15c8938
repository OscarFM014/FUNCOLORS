import java.awt.Dimension;
import javax.swing.JPanel;

import org.w3c.dom.events.MouseEvent;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.GridLayout;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.awt.image.BufferedImage;

import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;

import java.lang.InterruptedException;
import java.util.Random;

public class MyPanelDibujo extends JPanel implements Runnable, MouseListener, MouseMotionListener {
	private JPanel panelColor;



	public MyPanelDibujo(){
		super();
		this.addMouseListener(this);
		this.addMouseMotionListener(this);
		this.setPreferredSize(new Dimension(1000, 800));
		
		

		Thread hilo = new Thread(this);
		hilo.start();


	}

	//Llama funciones
	public void paintComponent(Graphics g ){
		super.paintComponent(g);
		this.pintaColores(g);
	}

	public void pintaColores(Graphics g){
		Random rand = new Random();
		for(int i = 0; i< 14; i ++){
			for(int j = 0; j< 14; j++){
				int color = (int)Math.floor(Math.random()*6+1);
				System.out.println(color);
				this.panelColor = new JPanel();
				if(color == 1){
					this.panelColor.setBackground(Color.RED);
				}else if(color == 2){
					this.panelColor.setBackground(Color.MAGENTA);
				}else if(color == 3){
					this.panelColor.setBackground(Color.PINK);
				}else if(color == 4){
					this.panelColor.setBackground(Color.GREEN);
				}else if(color == 5){
					this.panelColor.setBackground(Color.BLUE);
				}else if(color == 6){
					this.panelColor.setBackground(Color.YELLOW);
				}
				this.add(panelColor);
			}
			
		}
		
		this.setLayout(new GridLayout(14,14));  
	}
	//Pinta nave

	public void setXV(int xV){
		this.xV = xV;
		repaint();
	}

	public void setColorGlobo(Color colorGlobo){ // color del panel 
		this.colorGlobo = colorGlobo;
		repaint();
	}


	//Getters
	public int getXV(){
		return this.xV;
	}

	public int getYV(){
		return this.yV;
	}


	//Hilo 
	@Override
	public void run() {
		while(this.xV <= 750){
			try {
				if (mover){
					this.xV+=2;
					this.yV--;	
					this.repaint();
				}	
				Thread.sleep(50);
			}catch (InterruptedException ex){
				System.out.println("No puede despertar!!!!");
			}
		}	
	}



	// mOuse listener
	@Override
	public void mouseClicked(java.awt.event.MouseEvent e) {
		this.mover = true;	
	}


	@Override
	public void mousePressed(java.awt.event.MouseEvent e) {


	}


	@Override
	public void mouseReleased(java.awt.event.MouseEvent e) {


	}


	@Override
	public void mouseEntered(java.awt.event.MouseEvent e) {


	}


	@Override
	public void mouseExited(java.awt.event.MouseEvent e) {


	}


	//Mouse Motion listener
	@Override
	public void mouseDragged(java.awt.event.MouseEvent e) {
		//System.out.println(e.getX()+" "+e.getY()); //movimiento de los 
		this.xS = e.getX();
		this.yS = e.getY();
		repaint();
	}


	@Override
	public void mouseMoved(java.awt.event.MouseEvent e) {
		// TODO Auto-generated method stub

	}


}